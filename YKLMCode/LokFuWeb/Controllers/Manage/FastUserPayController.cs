using LokFu.Extensions;
using LokFu.FastPay;
using LokFu.Infrastructure;
using LokFu.Models;
using LokFu.Repositories;
using LokFu.Repositories.SqlServer;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web.Mvc;
namespace LokFu.Areas.Manage.Controllers
{
    /// <summary>
    /// 收付直通车-商户通道管理
    /// </summary>
    public class FastUserPayController : BaseController
    {
        public ActionResult Index(FastUserPay FastUserPay, EFPagingInfo<FastUserPay> p, DateTime? STime, DateTime? ETime, int IsFirst = 0)
        {
            #region 筛选条件
            if (!FastUserPay.MerId.IsNullOrEmpty())
            {
                switch (FastUserPay.Bin)
                {
                    case "1":
                        var ids = this.Entity.Users.Where(o => o.TrueName.Contains(FastUserPay.MerId)).Select(o => o.Id).ToList();
                        p.SqlWhere.Add(f => ids.Contains(f.UId));
                        break;
                    case "2":
                        var uid = this.Entity.Users.Where(o => o.UserName.Contains(FastUserPay.MerId)).Select(o => o.Id).ToList();
                        p.SqlWhere.Add(f => uid.Contains(f.UId));
                        break;
                }
            }
            if (!FastUserPay.MerState.IsNullOrEmpty())
            {
                var MerState = FastUserPay.MerState == 99 ? 0 : FastUserPay.MerState;
                p.SqlWhere.Add(f => f.MerState == MerState);
            }
            if (!FastUserPay.CardState.IsNullOrEmpty())
            {
                var CardState = FastUserPay.CardState == 99 ? 0 : FastUserPay.CardState;
                p.SqlWhere.Add(f => f.CardState == CardState);
            }
            if (!FastUserPay.BusiState.IsNullOrEmpty())
            {
                p.SqlWhere.Add(f => f.BusiState == FastUserPay.BusiState);
            }
            if (!FastUserPay.PayWay.IsNullOrEmpty())
            {
                p.SqlWhere.Add(f => f.PayWay == FastUserPay.PayWay);
            }
            if (STime.HasValue)
            {
                p.SqlWhere.Add(f => f.AddTime >= STime);
            }
            if (ETime.HasValue)
            {
                p.SqlWhere.Add(f => f.AddTime <= ETime);
            }
            #endregion
            p.OrderByList.Add("Id", "DESC");
            IPageOfItems<FastUserPay> FastUserPayList = null;
            if (IsFirst == 0)
            {
                FastUserPayList = new PageOfItems<FastUserPay>(new List<FastUserPay>(), 0, 10, 0, new Hashtable());
            }
            else
            {
                FastUserPayList = Entity.Selects<FastUserPay>(p);
            }
            var uids = FastUserPayList.Select(o => o.UId).ToList();
            var UsersList = this.Entity.Users.Where(o => uids.Contains(o.Id)).ToList();
            var FastPayWayList = this.Entity.FastPayWay.ToList();
            ViewBag.FastPayWayList = FastPayWayList;
            ViewBag.UsersList = UsersList;
            ViewBag.FastUserPayList = FastUserPayList;
            ViewBag.FastUserPay = FastUserPay;
            ViewBag.STime = STime;
            ViewBag.ETime = ETime;

            return View();
        }

        /// <summary>
        /// 通道查询
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet]
        public ActionResult ChannelQuery(int id)
        {
            ChannelDateModel ChannelDateModel = new ChannelDateModel();
            var FastUserPay = this.Entity.FastUserPay.FirstOrDefault(o => o.Id == id);
            if (FastUserPay == null)
            {
                ViewBag.ErrorMsg = "数据不存在";
                return View("Error");
            }
            var FastPayWay = this.Entity.FastPayWay.FirstOrDefault(o => o.Id == FastUserPay.PayWay);
            if (FastPayWay == null)
            {
                ViewBag.ErrorMsg = "接口数据不存在";
                return View("Error");
            }
            string[] PayConfigArr = FastPayWay.QueryArray.Split(',');
            if (FastPayWay.DllName == "HFPay")
            {
                ViewBag.ErrorMsg = "本接口不需要进件商户";
                return View("Error");
            }
            else if (FastPayWay.DllName == "HFJSPay")
            {
                ViewBag.ErrorMsg = "本接口不支持查询商户信息";
                return View("Error");
            }
            else
            {
                ViewBag.ErrorMsg = "没有适配的接口";
                return View("Error");
            }
            ViewBag.FastUserPay = FastUserPay;
            ViewBag.FastPayWay = FastPayWay;
            ViewBag.ChannelDateModel = ChannelDateModel;
            return this.View();
        }
        
        #region 批量通道查询
        //    public FastUserPayController()
    //    {
    //        ViewBag.Authorization = true;//允许权限
    //    }
    //    public FileResult Test()
    //    {
    //        List<string> dd = new List<string>()
    //        {

    //        };
    //        List<ChannelDateModel> ChannelDateModelList = new List<ChannelDateModel>();
    //        var FastPayWay = this.Entity.FastPayWay.FirstOrDefault(o => o.Id == 1);
    //        string[] PayConfigArr = FastPayWay.QueryArray.Split(',');
    //        if (PayConfigArr.Length == 3)
    //        {
    //            string agencyId = PayConfigArr[0];//机构号
    //            foreach(var item in dd)
    //            {
    //                GHTPay GHTPay = new GHTPay();
    //                Dictionary<string, string> AuthInfo = GHTPay.AuthInfo(item, agencyId);
    //                Dictionary<string, string> AuthMoney = GHTPay.AuthMoney(item, agencyId);
    //                var ChannelDateModel = new ChannelDateModel()
    //                {
    //                    MerchantId = AuthInfo.FirstOrNew(o => o.Key == "merchantId").Value,
    //                    Name = AuthInfo.FirstOrNew(o => o.Key == "name").Value,
    //                    CertNo = AuthInfo.FirstOrNew(o => o.Key == "certNo").Value,
    //                    BankAccountNo = AuthInfo.FirstOrNew(o => o.Key == "bankaccountNo").Value,
    //                    AuthResult = AuthInfo.FirstOrNew(o => o.Key == "authResult").Value,
    //                    BalanceAmount = AuthMoney.FirstOrNew(o => o.Key == "balanceAmount").Value,
    //                    FreezeAmount = AuthMoney.FirstOrNew(o => o.Key == "freezeAmount").Value,
    //                };
    //                ChannelDateModelList.Add(ChannelDateModel);
    //            }
                
    //        }
    //        DataTable table = new DataTable();
    //        DataRow row = null;

    //        // 创建 datatable
    //        table.Columns.Add(new DataColumn("商户号", typeof(string)));
    //        table.Columns.Add(new DataColumn("持卡人姓名", typeof(string)));
    //        table.Columns.Add(new DataColumn("持卡人证件号", typeof(string)));
    //        table.Columns.Add(new DataColumn("银行卡号", typeof(string)));
    //        table.Columns.Add(new DataColumn("入驻结果", typeof(string)));
    //        table.Columns.Add(new DataColumn("可用余额", typeof(string)));
    //        table.Columns.Add(new DataColumn("冻结金额", typeof(string)));

    //        // 填充数据
    //        foreach (var item in ChannelDateModelList)
    //        {
    //            row = table.NewRow();
    //            row[0] = item.MerchantId;
    //            row[1] = item.Name;
    //            row[2] = item.CertNo;
    //            row[3] = item.BankAccountNo;
    //            row[4] = item.AuthResult;
    //            row[5] = item.BalanceAmount;
    //            row[6] = item.FreezeAmount;
    //            table.Rows.Add(row);
    //        }

    //        return this.ExportExcelBase(table, "hehe");
        //    }
        #endregion
    }

    public class ChannelDateModel
    {
        /// <summary>
        /// 商户号[手机]
        /// </summary>
        public string MerchantId { get; set; }
        /// <summary>
        /// 持卡人姓名
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// 持卡人证件号
        /// </summary>
        public string CertNo { get; set; }
        /// <summary>
        /// 银行卡号
        /// </summary>
        public string BankAccountNo { get; set; }
        /// <summary>
        /// 入驻结果
        /// </summary>
        public string AuthResult { get; set; }
        /// <summary>
        /// 可用余额
        /// </summary>
        public string BalanceAmount { get; set; }
        /// <summary>
        /// 冻结金额
        /// </summary>
        public string FreezeAmount { get; set; }
    }
}
